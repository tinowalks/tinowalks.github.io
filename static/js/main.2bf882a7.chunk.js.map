{"version":3,"sources":["images/hourglass.svg","images/compass.png","images/trophy.png","images/catchingFire.png","images/frozenYogurt.png","images/frappucino.jpg","Mock.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Mock","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","rewards","sponsor","name","imgURL","catchingFireURL","metersEarned","metersRequired","frozenYogurtURL","frappucinoURL","currentRewardIndex","isCelebratingCompletion","page","Pages","Map","walkStatus","WalkStatus","Stationary","now","Date","metersWalked","markerPosition","INITIAL_MARKER_POSITION","forEach","methodName","bind","assertThisInitialized","incrementMetersWalked","Events","renderEventsPage","renderMapPage","Rewards","renderRewardsPage","Error","react_default","a","createElement","className","BonusEvent","isActive","dayOfWeek","dayDate","time","bonus","renderNavBar","renderCelebration","renderNormalMap","currentReward","style","width","src","alt","googleMapURL","loadingElement","height","containerElement","mapElement","Math","min","floor","onTouchStart","onWalkingOutDetectorActivated","onTouchEnd","onWalkingOutDetectorDeactivated","onMouseDown","onMouseUp","onWalkingInDetectorActivated","onWalkingInDetectorDeactivated","_this2","map","reward","i","Reward","isSelected","onClick","onSelectRewardIndex","_this3","requestAnimationFrame","setState","prevState","Out","In","dtInSeconds","deltaMeters","METERS_PER_SEC","objectSpread","FLAG_isAppCelebratingCompletion","some","setTimeout","findIndex","lat","toOutLatitude","lng","toOutLongitude","_this4","NOOP","navigatorFactory","hourglassURL","compassURL","trophyURL","index","React","Component","withScriptjs","withGoogleMap","_ref","lib","defaultZoom","defaultCenter","position","meters","cos","OUT_DIR","DEG_METER_CONVERSION","sin","PI","_ref2","_ref3","isComplete","Fragment","Checkmark","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","Mock_Mock","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2bf882a7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hourglass.71854460.svg\";","module.exports = __webpack_public_path__ + \"static/media/compass.c10dcea6.png\";","module.exports = __webpack_public_path__ + \"static/media/trophy.879e8a75.png\";","module.exports = __webpack_public_path__ + \"static/media/catchingFire.3e173036.png\";","module.exports = __webpack_public_path__ + \"static/media/frozenYogurt.554584d7.png\";","module.exports = __webpack_public_path__ + \"static/media/frappucino.c8dc9194.jpg\";","import React from \"react\";\nimport \"./Mock.css\";\nimport {\n  GoogleMap,\n  Marker,\n  withGoogleMap,\n  withScriptjs,\n} from \"react-google-maps\";\nimport hourglassURL from \"./images/hourglass.svg\";\nimport compassURL from \"./images/compass.png\";\nimport trophyURL from \"./images/trophy.png\";\nimport catchingFireURL from \"./images/catchingFire.png\";\nimport frozenYogurtURL from \"./images/frozenYogurt.png\";\nimport frappucinoURL from \"./images/frappucino.jpg\";\n\nexport default class Mock extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      rewards: [\n        {\n          sponsor: \"Cupertino Library\",\n          name: \"Free book of choice\",\n          imgURL: catchingFireURL,\n          metersEarned: 2499,\n          metersRequired: 2500,\n        },\n        {\n          sponsor: \"Yogurtland\",\n          name: \"50% off your next cup\",\n          imgURL: frozenYogurtURL,\n          metersEarned: 200,\n          metersRequired: 500,\n        },\n        {\n          sponsor: \"Starbucks\",\n          name: \"Free coffee\",\n          imgURL: frappucinoURL,\n          metersEarned: 672,\n          metersRequired: 1250,\n        },\n      ],\n      currentRewardIndex: 1,\n      isCelebratingCompletion: false,\n      page: Pages.Map,\n      walkStatus: WalkStatus.Stationary,\n      now: Date.now(),\n      metersWalked: 0,\n      metersRequired: 100,\n      markerPosition: INITIAL_MARKER_POSITION,\n    };\n\n    [\n      \"onWalkingOutDetectorActivated\",\n      \"onWalkingOutDetectorDeactivated\",\n      \"onWalkingInDetectorActivated\",\n      \"onWalkingInDetectorDeactivated\",\n      \"onSelectRewardIndex\",\n    ].forEach((methodName) => {\n      this[methodName] = this[methodName].bind(this);\n    });\n  }\n\n  componentDidMount() {\n    this.incrementMetersWalked();\n  }\n\n  render() {\n    switch (this.state.page) {\n      case Pages.Events:\n        return this.renderEventsPage();\n      case Pages.Map:\n        return this.renderMapPage();\n      case Pages.Rewards:\n        return this.renderRewardsPage();\n      default:\n        throw new Error(\"Illegal page: \" + this.state.page);\n    }\n  }\n\n  renderEventsPage() {\n    return (\n      <div className=\"Mock\">\n        <div className=\"EventsList\">\n          <BonusEvent\n            isActive\n            sponsor=\"Sports Basement\"\n            dayOfWeek=\"Sunday,\"\n            dayDate=\"April 14\"\n            time=\"6:00AM to 11:00AM\"\n            bonus=\"10%\"\n          />\n          <BonusEvent\n            sponsor=\"Cupertino High School\"\n            dayOfWeek=\"Wednesday,\"\n            dayDate=\"April 17\"\n            time=\"7:00AM to 9:00AM\"\n            bonus=\"50%\"\n          />\n          <BonusEvent\n            sponsor=\"AMC\"\n            dayOfWeek=\"Friday,\"\n            dayDate=\"April 19\"\n            time=\"7:00AM to 8:30AM\"\n            bonus=\"25%\"\n          />\n        </div>\n        {this.renderNavBar()}\n      </div>\n    );\n  }\n\n  renderMapPage() {\n    if (this.state.isCelebratingCompletion) {\n      return this.renderCelebration();\n    } else {\n      return this.renderNormalMap();\n    }\n  }\n\n  renderCelebration() {\n    const currentReward = this.state.rewards[this.state.currentRewardIndex];\n    return (\n      <div className=\"Mock\">\n        {currentReward && (\n          <div className=\"MeterDisplay\">\n            <div className=\"MeterBarBackground MeterBarBackground--celebration\">\n              <div className=\"MeterNumbers\">Challenge complete!</div>\n\n              <div\n                className=\"MeterBarForeground\"\n                style={{\n                  width:\n                    (currentReward.metersEarned /\n                      currentReward.metersRequired) *\n                      100 +\n                    \"%\",\n                }}\n              />\n            </div>\n            <img\n              className=\"MeterRewardImage--celebration\"\n              src={currentReward.imgURL}\n              alt={currentReward.name}\n            />\n          </div>\n        )}\n\n        <div className=\"Body Body--celebration\">\n          <div className=\"CelebrationBodyOverlay\" />\n          <div className=\"MapContainer\">\n            <Map\n              googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDNBvuTeyVOsMmyT1Y3PHtNccpLiiUNuxw\"\n              loadingElement={<div style={{ height: `100%` }} />}\n              containerElement={<div style={{ height: `400px` }} />}\n              mapElement={<div style={{ height: `100%` }} />}\n              markerPosition={this.state.markerPosition}\n            />\n          </div>\n        </div>\n        \n        {this.renderNavBar()}\n      </div>\n    );\n  }\n\n  renderNormalMap() {\n    const currentReward = this.state.rewards[this.state.currentRewardIndex];\n    return (\n      <div className=\"Mock\">\n        {currentReward && (\n          <div className=\"MeterDisplay\">\n            <div className=\"MeterBarBackground\">\n              <div className=\"MeterNumbers\">\n                {Math.min(\n                  Math.floor(currentReward.metersEarned),\n                  currentReward.metersRequired\n                )}\n                /{currentReward.metersRequired}m\n              </div>\n\n              <div\n                className=\"MeterBarForeground\"\n                style={{\n                  width:\n                    (currentReward.metersEarned /\n                      currentReward.metersRequired) *\n                      100 +\n                    \"%\",\n                }}\n              />\n            </div>\n            <img\n              className=\"MeterRewardImage\"\n              src={currentReward.imgURL}\n              alt={currentReward.name}\n            />\n          </div>\n        )}\n\n        <div className=\"Body\">\n          <div className=\"MapContainer\">\n            <Map\n              googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDNBvuTeyVOsMmyT1Y3PHtNccpLiiUNuxw\"\n              loadingElement={<div style={{ height: `100%` }} />}\n              containerElement={<div style={{ height: `400px` }} />}\n              mapElement={<div style={{ height: `100%` }} />}\n              markerPosition={this.state.markerPosition}\n            />\n          </div>\n          <div\n          className=\"WalkingOutDetector\"\n          onTouchStart={this.onWalkingOutDetectorActivated}\n          onTouchEnd={this.onWalkingOutDetectorDeactivated}\n          onMouseDown={this.onWalkingOutDetectorActivated}\n          onMouseUp={this.onWalkingOutDetectorDeactivated}\n        />\n        <div\n          className=\"WalkingInDetector\"\n          onTouchStart={this.onWalkingInDetectorActivated}\n          onTouchEnd={this.onWalkingInDetectorDeactivated}\n          onMouseDown={this.onWalkingInDetectorActivated}\n          onMouseUp={this.onWalkingInDetectorDeactivated}\n        />\n        </div>\n        \n        {this.renderNavBar()}\n      </div>\n    );\n  }\n\n  renderRewardsPage() {\n    return (\n      <div className=\"Mock\">\n        <div className=\"RewardsList\">\n          {this.state.rewards.map((reward, i) => (\n            <Reward\n              reward={reward}\n              isSelected={this.state.currentRewardIndex === i}\n              onClick={() => this.onSelectRewardIndex(i)}\n            />\n          ))}\n        </div>\n        {this.renderNavBar()}\n      </div>\n    );\n  }\n\n  incrementMetersWalked() {\n    requestAnimationFrame(() => {\n      this.incrementMetersWalked();\n      const now = Date.now();\n      this.setState((prevState) => {\n        if (\n          prevState.walkStatus === WalkStatus.Out ||\n          prevState.walkStatus === WalkStatus.In\n        ) {\n          const dtInSeconds = (now - prevState.now) / 1e3;\n          const deltaMeters = METERS_PER_SEC * dtInSeconds;\n          const rewards = prevState.rewards.map((reward, i) => {\n            if (i !== prevState.currentRewardIndex) {\n              return reward;\n            } else {\n              const metersEarned = reward.metersEarned + deltaMeters;\n              if (metersEarned < reward.metersRequired) {\n                return { ...reward, metersEarned };\n              } else {\n                return {\n                  ...reward,\n                  metersEarned,\n                  FLAG_isAppCelebratingCompletion: true,\n                };\n              }\n            }\n          });\n          const isCelebratingCompletion = rewards.some(\n            (reward) => reward.FLAG_isAppCelebratingCompletion\n          );\n          if (isCelebratingCompletion) {\n            setTimeout(() => {\n              this.setState((prevState) => ({\n                isCelebratingCompletion: false,\n                walkStatus: WalkStatus.Stationary,\n                page: Pages.Rewards,\n                currentRewardIndex: prevState.rewards.findIndex(\n                  (reward) => reward.metersEarned <= reward.metersRequired\n                ),\n              }));\n            }, 15e3);\n          }\n          return {\n            now,\n            rewards,\n            isCelebratingCompletion,\n            markerPosition: {\n              lat:\n                prevState.markerPosition.lat +\n                (prevState.walkStatus === WalkStatus.Out\n                  ? toOutLatitude(deltaMeters)\n                  : -toOutLatitude(deltaMeters)),\n              lng:\n                prevState.markerPosition.lng +\n                (prevState.walkStatus === WalkStatus.Out\n                  ? toOutLongitude(deltaMeters)\n                  : -toOutLongitude(deltaMeters)),\n            },\n          };\n        } else {\n          return { ...prevState, now };\n        }\n      });\n    });\n  }\n\n  onWalkingOutDetectorActivated() {\n    this.setState({ walkStatus: WalkStatus.Out });\n  }\n\n  onWalkingOutDetectorDeactivated() {\n    this.setState({ walkStatus: WalkStatus.Stationary });\n  }\n\n  onWalkingInDetectorActivated() {\n    this.setState({ walkStatus: WalkStatus.In });\n  }\n\n  onWalkingInDetectorDeactivated() {\n    this.setState({ walkStatus: WalkStatus.Stationary });\n  }\n\n  navigatorFactory(page) {\n    if (this.state.isCelebratingCompletion) {\n      return NOOP;\n    } else {\n      return () => {\n        this.setState({ page });\n      };\n    }\n    \n  }\n\n  renderNavBar() {\n    return (\n      <div className=\"Nav\">\n        <div\n          className={\n            this.state.page === Pages.Events\n              ? \"NavIcon NavIcon--active\"\n              : \"NavIcon\"\n          }\n          onClick={this.navigatorFactory(Pages.Events)}\n        >\n          <img src={hourglassURL} alt=\"Hourglass\" />\n        </div>\n        <div\n          className={\n            this.state.page === Pages.Map\n              ? \"NavIcon NavIcon--active\"\n              : \"NavIcon\"\n          }\n          onClick={this.navigatorFactory(Pages.Map)}\n        >\n          <img src={compassURL} alt=\"Compass\" />\n        </div>\n        <div\n          className={\n            this.state.page === Pages.Rewards\n              ? \"NavIcon NavIcon--active\"\n              : \"NavIcon\"\n          }\n          onClick={this.navigatorFactory(Pages.Rewards)}\n        >\n          <img src={trophyURL} alt=\"Trophy\" />\n        </div>\n      </div>\n    );\n  }\n\n  onSelectRewardIndex(index) {\n    this.setState({\n      currentRewardIndex: index,\n    });\n  }\n}\n\nconst METERS_PER_SEC = 1.4;\n\nconst Map = withScriptjs(\n  withGoogleMap(({ markerPosition }) => (\n    <GoogleMap\n      defaultZoom={18}\n      defaultCenter={INITIAL_MARKER_POSITION}\n    >\n      {<Marker position={markerPosition} />}\n    </GoogleMap>\n  ))\n);\n\nfunction toOutLongitude(meters) {\n  return Math.cos(OUT_DIR) * meters * DEG_METER_CONVERSION;\n}\n\nfunction toOutLatitude(meters) {\n  return Math.sin(OUT_DIR) * meters * DEG_METER_CONVERSION;\n}\n\nconst DEG_METER_CONVERSION = 1 / 221200;\n\nconst INITIAL_MARKER_POSITION = { lat: 37.326011, lng: -122.042402 };\n\nconst WalkStatus = {\n  Stationary: 0,\n  Out: 1,\n  In: 2,\n};\n\nconst OUT_DIR = 0.8 * Math.PI;\n\nconst Pages = {\n  Events: 0,\n  Map: 1,\n  Rewards: 2,\n};\n\nfunction BonusEvent({ isActive, sponsor, dayOfWeek, dayDate, time, bonus }) {\n  return (\n    <div className={isActive ? \"Event Event--active\" : \"Event\"}>\n      <div\n        className={\n          isActive\n            ? \"EventBonusContainer EventBonusContainer--active\"\n            : \"EventBonusContainer\"\n        }\n      >\n        <div className=\"EventBonus\">\n          <span className=\"EventBonusPlus\">+</span>\n          {bonus}\n        </div>\n      </div>\n\n      <div className=\"EventTimeContainer\">\n        <div className=\"EventSponsor\">{sponsor}</div>\n        <div className=\"EventDayOfWeek\">{dayOfWeek}</div>\n        <div className=\"EventDayDate\">{dayDate}</div>\n        <div className=\"EventTime\">{time}</div>\n      </div>\n    </div>\n  );\n}\n\nfunction Reward({ reward, isSelected, onClick }) {\n  const { sponsor, name, imgURL, metersEarned, metersRequired } = reward;\n  const isComplete = metersEarned >= metersRequired;\n  return (\n    <div\n      className={isSelected ? \"Reward Reward--selected\" : \"Reward\"}\n      onClick={isComplete ? NOOP : onClick}\n    >\n      <div className=\"RewardInfoContainer\">\n        <div className=\"RewardName\">\n          {isComplete ? (\n            <React.Fragment>\n              {name}\n              <Checkmark />\n            </React.Fragment>\n          ) : (\n            name\n          )}\n        </div>\n        <div className=\"RewardSponsor\">{sponsor}</div>\n        <div\n          className={\n            isComplete\n              ? \"RewardProgressBarBackground RewardProgressBarBackground--complete\"\n              : \"RewardProgressBarBackground\"\n          }\n        >\n          <div className=\"RewardProgressBarNumbers\">\n            {Math.min(Math.floor(metersEarned), metersRequired)}/\n            {metersRequired}m\n          </div>\n          <div\n            className={\n              isComplete\n                ? \"RewardProgressBarForeground RewardProgressBarForeground--complete\"\n                : \"RewardProgressBarForeground\"\n            }\n            style={{\n              width: (metersEarned / metersRequired) * 100 + \"%\",\n            }}\n          />\n        </div>\n      </div>\n      <div className=\"RewardImage\">\n        <img src={imgURL} alt={name} />\n      </div>\n    </div>\n  );\n}\n\nfunction NOOP() {}\n\nfunction Checkmark() {\n  return <span className=\"Checkmark\">✓</span>;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Mock from \"./Mock\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<Mock />, document.getElementById(\"root\"));\n\n// If you want your Mock to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}